@using Microsoft.AspNetCore.Components.Web
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Authorization
@using Frontend.Components
@using Frontend.Components.Layout
@using Frontend.Services
@namespace Frontend.Components
@inject AuthenticationStateProvider AuthStateProvider

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(App).Assembly">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                <NotAuthorized>
                    @if (context.User?.Identity?.IsAuthenticated != true)
                    {
                        <RedirectToLogin />
                    }
                    else
                    {
                        <div class="container mt-5">
                            <div class="alert alert-danger">
                                <h3>Not Authorized</h3>
                                <p>You are not authorized to access this resource.</p>
                            </div>
                        </div>
                    }
                </NotAuthorized>
                <Authorizing>
                    <div class="loading-container">
                        <div class="loading-spinner"></div>
                        <p>Authorizing...</p>
                    </div>
                </Authorizing>
            </AuthorizeRouteView>
        </Found>
        <NotFound>
            <PageTitle>Not found</PageTitle>
            <LayoutView Layout="@typeof(MainLayout)">
                <div class="container mt-5">
                    <div class="alert alert-warning">
                        <h3>Page Not Found</h3>
                        <p>Sorry, there's nothing at this address.</p>
                    </div>
                </div>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code {
    protected override void OnInitialized()
    {
        base.OnInitialized();
    }
} 